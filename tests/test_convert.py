import os
import math
import pytest
import subprocess
from code.convert import *

os.chdir(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
data_folder_path = os.path.join("tests", "data")
skip_all_tests = False


@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
def test_make_dict():
    expected = {
        "label": "",
        "utility": "",
        "type": "",
        "assessed": "",
        "period": "",
        "basic_charge_limit (imperial)": "",
        "basic_charge_limit (metric)": "",
        "month_start": "",
        "month_end": "",
        "hour_start": "",
        "hour_end": "",
        "weekday_start": "",
        "weekday_end": "",
        "charge (imperial)": "",
        "charge (metric)": "",
        "units": "",
        "Notes": "",
    }
    result = make_dict()
    assert result == expected


@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
@pytest.mark.parametrize(
    "lst, expected",
    [
        (
            [   
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            ],
            [(0, 11)]
        ),
        (
            [math.nan, math.nan, math.nan, math.nan, math.nan, math.nan, math.nan, math.nan, math.nan, math.nan, math.nan, math.nan],
            [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]
        ),
        (
            [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
            [(0, 7), (8, 19), (20, 23)]
        ),
        (
            [
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2], 
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2], 
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2], 
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2], 
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2], 
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0]
            ],
            [(0, 3), (4, 9), (10, 11)]
        )
    ],
)
def test_find_consecutive_ranges(lst, expected):
    result = find_consecutive_ranges(lst)
    assert result == expected


@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
@pytest.mark.parametrize(
    "charge, unit, charge_dict, expected",
    [
        (
            13.709999999999999,
            "kW",
            {
                'label': '539fc321ec4f024c27d8b8e5', 
                'utility': 'electric', 
                'type': 'demand', 
                'assessed': '', 
                'period': 'flat', 
                'basic_charge_limit (imperial)': 0, 
                'basic_charge_limit (metric)': 0, 
                'month_start': '1', 
                'month_end': '5', 
                'hour_start': '0', 
                'hour_end': '24', 
                'weekday_start': '0', 
                'weekday_end': '6', 
                'charge (imperial)': '', 
                'charge (metric)': '', 
                'units': '', 
                'Notes': 'adjustment factor of 3.68'
            },
            {
                'label': '539fc321ec4f024c27d8b8e5', 
                'utility': 'electric',
                'type': 'demand', 
                'assessed': '', 
                'period': 'flat', 
                'basic_charge_limit (imperial)': 0,
                'basic_charge_limit (metric)': 0,
                'month_start': '1', 
                'month_end': '5', 
                'hour_start': '0', 
                'hour_end': '24', 
                'weekday_start': '0', 
                'weekday_end': '6', 
                'charge (imperial)': 13.709999999999999, 
                'charge (metric)': 13.709999999999999, 
                'units': '$/kW', 
                'Notes': 'adjustment factor of 3.68'
            },
        ),
        (
            15.36,
            "kW",
            {
                'label': '539f6b35ec4f024411ec9a0f', 
                'utility': 'electric', 
                'type': 'demand', 
                'assessed': '', 
                'period': 'flat', 
                'basic_charge_limit (imperial)': 0, 
                'basic_charge_limit (metric)': 0,
                'month_start': '1', 
                'month_end': '12', 
                'hour_start': '0', 
                'hour_end': '24',
                'weekday_start': '0',
                'weekday_end': '6', 
                'charge (imperial)': '', 
                'charge (metric)': '',
                'units': '', 
                'Notes': ''
            },
            {
                'label': '539f6b35ec4f024411ec9a0f', 
                'utility': 'electric',
                'type': 'demand', 
                'assessed': '', 
                'period': 'flat', 
                'basic_charge_limit (imperial)': 0, 
                'basic_charge_limit (metric)': 0, 
                'month_start': '1', 
                'month_end': '12',
                'hour_start': '0', 
                'hour_end': '24', 
                'weekday_start': '0', 
                'weekday_end': '6', 
                'charge (imperial)': 15.36, 
                'charge (metric)': 15.36, 
                'units': '$/kW', 
                'Notes': ''
            }
        )
    ],
)
def test_process_demand_unit(charge, unit, charge_dict, expected):
    result = process_demand_unit(charge, unit, charge_dict)
    assert result == expected


@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
@pytest.mark.parametrize(
    "tariff_row_path, expected",
    [
        (
            "row_539f6b35ec4f024411ec9a0f.csv",
            [
                {
                    'label': '539f6b35ec4f024411ec9a0f', 
                    'utility': 'electric', 
                    'type': 'customer', 
                    'assessed': '', 
                    'period': '', 
                    'basic_charge_limit (imperial)': '', 
                    'basic_charge_limit (metric)': '',
                    'month_start': '', 
                    'month_end': '', 
                    'hour_start': '', 
                    'hour_end': '', 
                    'weekday_start': '', 
                    'weekday_end': '', 
                    'charge (imperial)': 0, 
                    'charge (metric)': 0, 
                    'units': '$/month', 
                    'Notes': 'http://www.kutztownboro.org/kutztown/uploads/ElectricRatesJanuary2012.pdf'
                }
            ]
        ),
        (
            "row_539f6ba0ec4f024411ec9f97.csv",
            [
                {
                    'label': '539f6ba0ec4f024411ec9f97', 
                    'utility': 'electric',
                    'type': 'customer', 
                    'assessed': '', 
                    'period': '', 
                    'basic_charge_limit (imperial)': '', 
                    'basic_charge_limit (metric)': '', 
                    'month_start': '',
                    'month_end': '', 
                    'hour_start': '', 
                    'hour_end': '', 
                    'weekday_start': '', 
                    'weekday_end': '', 
                    'charge (imperial)': 58.87, 
                    'charge (metric)': 58.87, 
                    'units': '$/month', 
                    'Notes': 'http://www.riversideca.gov/utilities/elec-provrate.asp'
                }
            ]
        )
    ]
)
def test_process_customer(tariff_row_path, expected):
    tariff_row = pd.read_csv(os.path.join(data_folder_path, tariff_row_path))
    result = process_customer(tariff_row.iloc[0])
    assert result == expected


@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
@pytest.mark.parametrize(
    "tariff_row_path, expected",
    [
        (
            "row_539f6b35ec4f024411ec9a0f.csv",
            [
                {
                    'label': '539f6b35ec4f024411ec9a0f', 
                    'utility': 'electric',
                    'type': 'demand', 
                    'assessed': '', 
                    'period': 'flat', 
                    'basic_charge_limit (imperial)': 0, 
                    'basic_charge_limit (metric)': 0, 
                    'month_start': '1', 
                    'month_end': '12',
                    'hour_start': '0', 
                    'hour_end': '24', 
                    'weekday_start': '0', 
                    'weekday_end': '6', 
                    'charge (imperial)': 15.36, 
                    'charge (metric)': 15.36, 
                    'units': '$/kW', 
                    'Notes': ''
                },
                {
                    'label': '539f6b35ec4f024411ec9a0f', 
                    'utility': 'electric', 
                    'type': 'demand', 
                    'assessed': '', 
                    'period': 'flat', 
                    'basic_charge_limit (imperial)': 125.0, 
                    'basic_charge_limit (metric)': 125.0,
                    'month_start': '1', 
                    'month_end': '12', 
                    'hour_start': '0', 
                    'hour_end': '24', 
                    'weekday_start': '0', 
                    'weekday_end': '6', 
                    'charge (imperial)': 12.68, 
                    'charge (metric)': 12.68, 
                    'units': '$/kW', 
                    'Notes': ''
                },
            ]
        ),
        (
            "row_539f6ba0ec4f024411ec9f97.csv",
            []
        )
    ]
)
def test_process_flat_demand(tariff_row_path, expected):
    tariff_row = pd.read_csv(os.path.join(data_folder_path, tariff_row_path))
    result = process_flat_demand(tariff_row.iloc[0])
    assert result == expected

@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
@pytest.mark.parametrize(
    "lst, sched, string, units, tariff_type, week_start, week_end, tariff_row_path, expected",
    [
        (
            [(0, 11)],
            [
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            ],
            "energyratestructure",
            "$/kWh",
            "energy",
            5,
            6,
            "row_539f6b35ec4f024411ec9a0f.csv",
            [   
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1216,
                    'charge (metric)': 0.1216,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 150.0,
                    'basic_charge_limit (metric)': 150.0,
                    'charge (imperial)': 0.1029,
                    'charge (metric)': 0.1029,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 250.0,
                    'basic_charge_limit (metric)': 250.0,
                    'charge (imperial)': 0.0883,
                    'charge (metric)': 0.0883,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 300.0,
                    'basic_charge_limit (metric)': 300.0,
                    'charge (imperial)': 0.0803,
                    'charge (metric)': 0.0803,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
            ]
        ),
        (
            [(0, 11)],
            [
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            ],
            "demandratestructure",
            "$/kW",
            "demand",
            0,
            4,
            "row_539f6b35ec4f024411ec9a0f.csv",
            [
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': math.nan,
                    'charge (metric)': math.nan,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                }
            ]
        )
    ],
)
def test_unpack_array(
    lst, sched, string, units, tariff_type, week_start, week_end, tariff_row_path, expected
):
    tariff_row = pd.read_csv(os.path.join(data_folder_path, tariff_row_path))
    result = unpack_array(
        lst, sched, string, units, tariff_type, week_start, week_end, tariff_row.iloc[0]
    )
    try:
        assert result == expected
    except AssertionError:
        for i, result_entry in enumerate(result):
            expected_entry = expected[i]
            for key, val in result_entry.items():
                assert val == expected_entry[key] or (pd.isna(val) and pd.isna(expected_entry[key]))


@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
@pytest.mark.parametrize(
    "tariff_row_path, expected",
    [
        ("row_539f6b35ec4f024411ec9a0f.csv", []),
        (
            "row_539f6a0aec4f024411ec8af3.csv",
            [
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.0,
                    'charge (metric)': 0.0,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '4',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.0,
                    'charge (metric)': 0.0,
                    'hour_end': 15,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '5',
                    'period': 'period0',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 10.92,
                    'charge (metric)': 10.92,
                    'hour_end': 19,
                    'hour_start': 15,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '5',
                    'period': 'period1',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.0,
                    'charge (metric)': 0.0,
                    'hour_end': 24,
                    'hour_start': 19,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '5',
                    'period': 'period0',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.0,
                    'charge (metric)': 0.0,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '11',
                    'period': 'period0',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.0,
                    'charge (metric)': 0.0,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
            ]   
        )
    ]
)
def test_process_tou_demand(tariff_row_path, expected):
    tariff_row = pd.read_csv(os.path.join(data_folder_path, tariff_row_path))
    result = process_tou_demand(tariff_row.iloc[0])
    assert result == expected


@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
@pytest.mark.parametrize(
    "tariff_row_path, expected",
    [
        (
            "row_539f6b35ec4f024411ec9a0f.csv", 
            [
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1216,
                    'charge (metric)': 0.1216,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 150.0,
                    'basic_charge_limit (metric)': 150.0,
                    'charge (imperial)': 0.1029,
                    'charge (metric)': 0.1029,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 250.0,
                    'basic_charge_limit (metric)': 250.0,
                    'charge (imperial)': 0.0883,
                    'charge (metric)': 0.0883,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 300.0,
                    'basic_charge_limit (metric)': 300.0,
                    'charge (imperial)': 0.0803,
                    'charge (metric)': 0.0803,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1216,
                    'charge (metric)': 0.1216,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 150.0,
                    'basic_charge_limit (metric)': 150.0,
                    'charge (imperial)': 0.1029,
                    'charge (metric)': 0.1029,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 250.0,
                    'basic_charge_limit (metric)': 250.0,
                    'charge (imperial)': 0.0883,
                    'charge (metric)': 0.0883,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 300.0,
                    'basic_charge_limit (metric)': 300.0,
                    'charge (imperial)': 0.0803,
                    'charge (metric)': 0.0803,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
            ]
        ),
        (
            "row_539f6a0aec4f024411ec8af3.csv",
            [
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 8,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '4',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11800000000000001,
                    'charge (metric)': 0.11800000000000001,
                    'hour_end': 22,
                    'hour_start': 8,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '4',
                    'month_start': '1',
                    'period': 'period2',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 24,
                    'hour_start': 22,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '4',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11193,
                    'charge (metric)': 0.11193,
                    'hour_end': 8,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '9',
                    'month_start': '5',
                    'period': 'period1',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.13009,
                    'charge (metric)': 0.13009,
                    'hour_end': 15,
                    'hour_start': 8,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '9',
                    'month_start': '5',
                    'period': 'period3',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.16211,
                    'charge (metric)': 0.16211,
                    'hour_end': 19,
                    'hour_start': 15,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '9',
                    'month_start': '5',
                    'period': 'period4',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.13009,
                    'charge (metric)': 0.13009,
                    'hour_end': 22,
                    'hour_start': 19,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '9',
                    'month_start': '5',
                    'period': 'period3',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11193,
                    'charge (metric)': 0.11193,
                    'hour_end': 24,
                    'hour_start': 22,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '9',
                    'month_start': '5',
                    'period': 'period1',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11193,
                    'charge (metric)': 0.11193,
                    'hour_end': 8,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '10',
                    'period': 'period1',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11800000000000001,
                    'charge (metric)': 0.11800000000000001,
                    'hour_end': 22,
                    'hour_start': 8,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '10',
                    'period': 'period2',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11193,
                    'charge (metric)': 0.11193,
                    'hour_end': 24,
                    'hour_start': 22,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '10',
                    'period': 'period1',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 8,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '11',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11800000000000001,
                    'charge (metric)': 0.11800000000000001,
                    'hour_end': 22,
                    'hour_start': 8,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '11',
                    'period': 'period2',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 24,
                    'hour_start': 22,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '11',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '4',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11193,
                    'charge (metric)': 0.11193,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '5',
                    'period': 'period1',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '11',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
            ]
        )
    ],
)
def test_process_energy(tariff_row_path, expected):
    tariff_row = pd.read_csv(os.path.join(data_folder_path, tariff_row_path))
    result = process_energy(tariff_row.iloc[0])
    assert result == expected


@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
@pytest.mark.parametrize(
    "tariff_row_path, expected",
    [
        (
            "row_539f6b35ec4f024411ec9a0f.csv", 
            {
                'eiaid': '10494',
                'label': '539f6b35ec4f024411ec9a0f',
                'name': 'GENERAL INDUSTRIAL SERVICE',
                'notes': math.nan,
                'source': 'http://www.kutztownboro.org/kutztown/uploads/ElectricRatesJanuary2012.pdf',
                'state': 'PA',
                'utility': 'Borough of Kutztown, Pennsylvania (Utility Company)',
                'zipcode': math.nan,
            }
        ),
        (
            "row_539f6a0aec4f024411ec8af3.csv",
            {
                'eiaid': '11124',
                'label': '539f6a0aec4f024411ec8af3',
                'name': 'Group 3 Industrial Secondary',
                'notes': 'This schedule shall be applied to accounts with billing period demands of '
                'between 400 kilowatts (kW) and 500 kW for three consecutive billing '
                'cycles. This schedule is not available for service when another '
                'commercial/industrial schedule is applicable.\n'
                '\n'
                '\n'
                'Demand: The billing period and peak period demands will be the maximum '
                'average power taken during any 15-minute interval in the billing period '
                'and peak period, respectively, but not less than the diversified '
                'resistance welder load. In cases where the use of energy is intermittent '
                'or subject to violent fluctuations, a 5-minute interval may be used.\n'
                '\n'
                'Assignment to Schedule: If, in the judgement of the City, an account is '
                'expected to have billing period demand of 400 kW or more and less than '
                '500 kW per billing cycle, the City has the option of placing the account '
                'immediately on this schedule.\n'
                '\n'
                'When an account billed on this schedule permanently changes the nature of '
                'electrical operations to such an extent that the account would in time '
                'qualify for another rate schedule, such billing change will be made as '
                'soon as practicable after verification of said changes. It shall be the '
                'responsibility of the customer to notify the City of any such changes.\n'
                '\n'
                'If billing period demand drops below 400 kW and remains there for 12 '
                'consecutive billing cycles, the City will transfer the account to the '
                'appropriate rate schedule. If billing period demand reaches or exceeds '
                '500 kW for three consecutive billing cycles, the account will be '
                'transferred to the appropriate rate schedule.\n'
                '\n'
                '*Adjustment = California Solar Initiative Surcharge\n'
                '\n'
                '*Summer Partial Peak = 8:30 a.m. to 3:00 p.m. and 7:00 p.m. to 9:30 p.m. '
                'Monday through Friday (except holidays)\n'
                '\n'
                '*Summer Off Peak = 9:30 p.m. to 8:30 a.m. Monday through Friday and all '
                'day Saturday, Sunday and holidays. \n'
                '\n'
                '*Winter Partial Peak = 8:30 a.m. to 9:30 p.m. Monday through Friday '
                '(except holidays). \n'
                '\n'
                '*Winter Off Peak = 9:30 p.m. to 8:30 a.m. Monday through Friday and all '
                'day Saturday, Sunday and holidays.',
                'source': 'http://lodielectric.com/commercial/rateform.asp?id=12',
                'state': 'CA',
                'utility': 'City of Lodi, California (Utility Company)',
                'zipcode': 95242,
            }
        )
    ],
)
def test_generate_metadata(tariff_row_path, expected):
    zipcodes = pd.read_csv(os.path.join(data_folder_path, "merged_zipcodes.csv"))
    tariff_row = pd.read_csv(os.path.join(data_folder_path, tariff_row_path))
    result = generate_metadata(tariff_row.iloc[0], zipcodes)
    try:
        assert result == expected
    except AssertionError:
        for key, val in result.items():
            assert val == expected[key] or (pd.isna(val) and pd.isna(expected[key]))


@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
@pytest.mark.parametrize(
    "tariff_row_path, expected",
    [
        ("row_539f6b35ec4f024411ec9a0f.csv", 
            [
                {
                    'Notes': 'http://www.kutztownboro.org/kutztown/uploads/ElectricRatesJanuary2012.pdf',
                    'assessed': '',
                    'basic_charge_limit (imperial)': '',
                    'basic_charge_limit (metric)': '',
                    'charge (imperial)': 0,
                    'charge (metric)': 0,
                    'hour_end': '',
                    'hour_start': '',
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '',
                    'month_start': '',
                    'period': '',
                    'type': 'customer',
                    'units': '$/month',
                    'utility': 'electric',
                    'weekday_end': '',
                    'weekday_start': '',
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 15.36,
                    'charge (metric)': 15.36,
                    'hour_end': '24',
                    'hour_start': '0',
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'flat',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': '6',
                    'weekday_start': '0',
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 125.0,
                    'basic_charge_limit (metric)': 125.0,
                    'charge (imperial)': 12.68,
                    'charge (metric)': 12.68,
                    'hour_end': '24',
                    'hour_start': '0',
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'flat',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': '6',
                    'weekday_start': '0',
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1216,
                    'charge (metric)': 0.1216,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 150.0,
                    'basic_charge_limit (metric)': 150.0,
                    'charge (imperial)': 0.1029,
                    'charge (metric)': 0.1029,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 250.0,
                    'basic_charge_limit (metric)': 250.0,
                    'charge (imperial)': 0.0883,
                    'charge (metric)': 0.0883,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 300.0,
                    'basic_charge_limit (metric)': 300.0,
                    'charge (imperial)': 0.0803,
                    'charge (metric)': 0.0803,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1216,
                    'charge (metric)': 0.1216,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 150.0,
                    'basic_charge_limit (metric)': 150.0,
                    'charge (imperial)': 0.1029,
                    'charge (metric)': 0.1029,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 250.0,
                    'basic_charge_limit (metric)': 250.0,
                    'charge (imperial)': 0.0883,
                    'charge (metric)': 0.0883,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 300.0,
                    'basic_charge_limit (metric)': 300.0,
                    'charge (imperial)': 0.0803,
                    'charge (metric)': 0.0803,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6b35ec4f024411ec9a0f',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
            ]
        ),
        (
            "row_539f6a0aec4f024411ec8af3.csv",
            [
                {
                    'Notes': 'http://lodielectric.com/commercial/rateform.asp?id=12',
                    'assessed': '',
                    'basic_charge_limit (imperial)': '',
                    'basic_charge_limit (metric)': '',
                    'charge (imperial)': 128.13,
                    'charge (metric)': 128.13,
                    'hour_end': '',
                    'hour_start': '',
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '',
                    'month_start': '',
                    'period': '',
                    'type': 'customer',
                    'units': '$/month',
                    'utility': 'electric',
                    'weekday_end': '',
                    'weekday_start': '',
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 3.9,
                    'charge (metric)': 3.9,
                    'hour_end': '24',
                    'hour_start': '0',
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'flat',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': '6',
                    'weekday_start': '0',
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.0,
                    'charge (metric)': 0.0,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '4',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.0,
                    'charge (metric)': 0.0,
                    'hour_end': 15,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '5',
                    'period': 'period0',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 10.92,
                    'charge (metric)': 10.92,
                    'hour_end': 19,
                    'hour_start': 15,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '5',
                    'period': 'period1',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.0,
                    'charge (metric)': 0.0,
                    'hour_end': 24,
                    'hour_start': 19,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '5',
                    'period': 'period0',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.0,
                    'charge (metric)': 0.0,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '11',
                    'period': 'period0',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.0,
                    'charge (metric)': 0.0,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'demand',
                    'units': '$/kW',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 8,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '4',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11800000000000001,
                    'charge (metric)': 0.11800000000000001,
                    'hour_end': 22,
                    'hour_start': 8,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '4',
                    'month_start': '1',
                    'period': 'period2',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 24,
                    'hour_start': 22,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '4',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11193,
                    'charge (metric)': 0.11193,
                    'hour_end': 8,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '9',
                    'month_start': '5',
                    'period': 'period1',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.13009,
                    'charge (metric)': 0.13009,
                    'hour_end': 15,
                    'hour_start': 8,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '9',
                    'month_start': '5',
                    'period': 'period3',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.16211,
                    'charge (metric)': 0.16211,
                    'hour_end': 19,
                    'hour_start': 15,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '9',
                    'month_start': '5',
                    'period': 'period4',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.13009,
                    'charge (metric)': 0.13009,
                    'hour_end': 22,
                    'hour_start': 19,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '9',
                    'month_start': '5',
                    'period': 'period3',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11193,
                    'charge (metric)': 0.11193,
                    'hour_end': 24,
                    'hour_start': 22,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '9',
                    'month_start': '5',
                    'period': 'period1',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11193,
                    'charge (metric)': 0.11193,
                    'hour_end': 8,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '10',
                    'period': 'period1',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11800000000000001,
                    'charge (metric)': 0.11800000000000001,
                    'hour_end': 22,
                    'hour_start': 8,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '10',
                    'period': 'period2',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11193,
                    'charge (metric)': 0.11193,
                    'hour_end': 24,
                    'hour_start': 22,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '10',
                    'period': 'period1',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 8,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '11',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11800000000000001,
                    'charge (metric)': 0.11800000000000001,
                    'hour_end': 22,
                    'hour_start': 8,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '11',
                    'period': 'period2',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 24,
                    'hour_start': 22,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '11',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 4,
                    'weekday_start': 0,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '4',
                    'month_start': '1',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.11193,
                    'charge (metric)': 0.11193,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '10',
                    'month_start': '5',
                    'period': 'period1',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
                {
                    'Notes': '',
                    'assessed': '',
                    'basic_charge_limit (imperial)': 0,
                    'basic_charge_limit (metric)': 0,
                    'charge (imperial)': 0.1078,
                    'charge (metric)': 0.1078,
                    'hour_end': 24,
                    'hour_start': 0,
                    'label': '539f6a0aec4f024411ec8af3',
                    'month_end': '12',
                    'month_start': '11',
                    'period': 'period0',
                    'type': 'energy',
                    'units': '$/kWh',
                    'utility': 'electric',
                    'weekday_end': 6,
                    'weekday_start': 5,
                },
            ]
        )
    ],
)
def test_create_tariff(tariff_row_path, expected):
    tariff_row = pd.read_csv(os.path.join(data_folder_path, tariff_row_path))
    result = create_tariff(tariff_row.iloc[0])
    assert result == expected


@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
@pytest.mark.parametrize(
    "zipcode, expected",
    [
        ("94103", (37.7725, -122.4147)),
        ("3901", (43.2899, -70.855)),
        (math.nan, (None, None))
    ],
)
def test_get_lat_long(zipcode, expected):
    result = get_lat_long(zipcode)
    assert result == expected

@pytest.mark.skipif(skip_all_tests, reason="Exclude all tests")
@pytest.mark.parametrize("suffix", [("_bundled"), ("_delivery_only")])
def test_main(suffix):
    # ensure that previous steps have been run so that `main` can be tested
    command = ["python", "code/download.py"]
    subprocess.run(command, check=True)
    command = ["python", "code/filter.py"]
    subprocess.run(command, check=True)

    # run main for just one suffix
    main(suffix=suffix)

    # check that 'latitude' and 'longitude' columns were added to metadata    
    metadata_df = pd.read_csv(os.path.join("data", "converted", "metadata" + suffix + ".csv"))
    assert "latitude" in metadata_df.columns
    assert "longitude" in metadata_df.columns
    assert "latitude" in metadata_df.columns
    assert "longitude" in metadata_df.columns